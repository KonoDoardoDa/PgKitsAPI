// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PgKits.Infrastructure.Persistence;

#nullable disable

namespace PgKits.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250816233145_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PgKits.Domain.Entities.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("fornecedores", (string)null);
                });

            modelBuilder.Entity("PgKits.Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("itens", (string)null);
                });

            modelBuilder.Entity("PgKits.Domain.Entities.Kit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("kits", (string)null);
                });

            modelBuilder.Entity("PgKits.Domain.Entities.KitItem", b =>
                {
                    b.Property<int>("KitId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("KitId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("KitItens");
                });

            modelBuilder.Entity("PgKits.Domain.Entities.Item", b =>
                {
                    b.HasOne("PgKits.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany("Itens")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_itens_Fornecedores_FornecedorId");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("PgKits.Domain.Entities.KitItem", b =>
                {
                    b.HasOne("PgKits.Domain.Entities.Item", "Item")
                        .WithMany("KitItens")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PgKits.Domain.Entities.Kit", "Kit")
                        .WithMany("KitItens")
                        .HasForeignKey("KitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Kit");
                });

            modelBuilder.Entity("PgKits.Domain.Entities.Fornecedor", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("PgKits.Domain.Entities.Item", b =>
                {
                    b.Navigation("KitItens");
                });

            modelBuilder.Entity("PgKits.Domain.Entities.Kit", b =>
                {
                    b.Navigation("KitItens");
                });
#pragma warning restore 612, 618
        }
    }
}
